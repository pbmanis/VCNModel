// calyx_experiments.hoc
// This file contains the code to control the "experiments" on the calyx model
// Pulled from calyx5.m 11/5/07
// Paul B. Manis, Ph.D.
// UNC Chapel Hill
////**********************Experiments*****************************
// run a passive model... 

proc runpassive() { local jj
	setpassiveconductances()
	sprint(folder,"../Passive")
	for (newRa = 25; newRa <= 300; newRa = newRa + 25) {
		update_Ra()
		if(clamp_mode == 0) { // for current clamp
			if(GBCFLAG == 1) {
				soma {
					ic.amp = -0.01
					ic.del = 2
					ic.dur = 40
					tstop = 50
					icgbcloc = 0.5
				}
			} 
			{
				axon[0] {
					ic.amp = -0.01
					ic.dur = 40
					ic.del = 2
					tstop = 50
					iclocation = 0.5
				}
			}
					
		}
		if(clamp_mode == 1) { // for voltage clamp
			axon[0] {
				vc.dur1 = 5
				vc.dur2 = 10
				vc.dur3 = 10
				vc.amp1 = -65
				vc.amp2 = -75
				vc.amp3 = -65
				forsec all {cm = 0.001}
				tstop = 25
			}
			vclocation = 1
		}		
		
		jj = 1

		for(newg_leak = 1e-6; newg_leak <= 9e-6; newg_leak = newg_leak += 4e-6) {
			update_gleak()
			sprint(manipulation, "Ra%03d-gpas%d", newRa, jj)

			calyxrun()
			write_data()	
			jj = jj + 1
		}
		
	}
	setdefaultconductances() // restore 	 
	setdeficlamp()
	setdefvclamp()
}


proc rununiform() {
	setuniformconductances()
	sprint(folder,"../Uniform_%s", clampstr)
	run_limited()
}

proc runstandard() {
	setdefaultconductances()
	sprint(folder, "../Canonical_%s", clampstr)
	run_limited()
}

proc runhighcalcium() {
	sethighCaConductances()
	sprint(folder, "../HighCa_%s", clampstr)
	run_limited()
}

proc sethightipca() {
	setdefaultconductances()
	gca_tp = gca_def*3
	biophys(0)
}
	
proc runhightipca() {
	sethightipca()
	sprint(folder, "../TipCa_%s", clampstr)
	run_limited()
	}

proc setstalkna() {
	setdefaultconductances()
	gna_st = gna_def
	biophys(0)
}

proc runstalkna() {
	setstalkna()
	sprint(folder, "../StalkNa_%s", clampstr)
	run_limited()
}


// run a limited set of Ra/gleak in current clamp
proc run_limited() { local jj
	for (newRa = 50; newRa <= 300; newRa = newRa + 50) {
		update_Ra()
		if(clamp_mode == 0) { // for current clamp
			if(GBCFLAG == 1) {
				soma {
				icgbc.amp = icAmpDef
				icgbc.del = 1
				icgbc.dur = icDurDef
				tstop = 10
				}
			}
				{
					axon[0] {
						ic.amp = icAmpDef
						ic.del = 1
						ic.dur = icDurDef
					}
		}
			forsec all {cm = 1}
			iclocation = 0
		}
		if(clamp_mode == 1) { // for voltage clamp
			axon[0] {
				vc.dur1 = 5
				vc.dur2 = 10
				vc.dur3 = 10
				vc.amp1 = -65
				vc.amp2 = -75
				vc.amp3 = -65
				vc.loc(1.0)
				tstop = 25
			}
			forsec all {cm = 0.001}
			vclocation = 1
		}				
		jj = 1
		for(newg_leak = 1e-6; newg_leak <= 9e-6; newg_leak = newg_leak + 4e-6) {
			printf("Ra: %8.1f   gLeak: %9.5f\n", newRa, newg_leak)
			update_gleak()
			sprint(manipulation, "Ra%03d-gpas%d", newRa, jj)

			calyxrun()
			write_data()	
			jj = jj + 1
		}		
	}
	setdefaultconductances() // restore 	 
	setdeficlamp()
	setdefvclamp()
}

